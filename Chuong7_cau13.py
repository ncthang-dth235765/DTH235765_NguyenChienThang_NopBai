#C√¢u 13: X·ª≠ l√Ω XML File - Vi·∫øt ph·∫ßn m·ªÅm Qu·∫£n L√Ω Thi·∫øt B·ªã
from xml.dom.minidom import parse
import xml.dom.minidom

# ------------------------------
# H√ÄM ƒê·ªåC DANH S√ÅCH NH√ìM THI·∫æT B·ªä
# ------------------------------
def doc_nhom_thiet_bi(file_path):
    DOMTree = xml.dom.minidom.parse(file_path)
    collection = DOMTree.documentElement
    nhoms = collection.getElementsByTagName("nhom")

    ds_nhom = []
    for nhom in nhoms:
        ma = nhom.getElementsByTagName('ma')[0].childNodes[0].data
        ten = nhom.getElementsByTagName('ten')[0].childNodes[0].data
        ds_nhom.append({'ma': ma, 'ten': ten})
    return ds_nhom


# ------------------------------
# H√ÄM ƒê·ªåC DANH S√ÅCH THI·∫æT B·ªä
# ------------------------------
def doc_thiet_bi(file_path):
    DOMTree = xml.dom.minidom.parse(file_path)
    collection = DOMTree.documentElement
    thietbis = collection.getElementsByTagName("thietbi")

    ds_tb = []
    for tb in thietbis:
        manhom = tb.getAttribute("manhom")
        ma = tb.getElementsByTagName('ma')[0].childNodes[0].data
        ten = tb.getElementsByTagName('ten')[0].childNodes[0].data
        ds_tb.append({'ma': ma, 'ten': ten, 'manhom': manhom})
    return ds_tb


# ------------------------------
# HI·ªÇN TH·ªä DANH S√ÅCH NH√ìM
# ------------------------------
def hien_thi_ds_nhom(ds_nhom):
    print("\nüìÇ DANH S√ÅCH NH√ìM THI·∫æT B·ªä:")
    for nhom in ds_nhom:
        print(f"‚Üí {nhom['ma']} - {nhom['ten']}")


# ------------------------------
# HI·ªÇN TH·ªä TO√ÄN B·ªò THI·∫æT B·ªä
# ------------------------------
def hien_thi_ds_thiet_bi(ds_tb):
    print("\nüß∞ DANH S√ÅCH THI·∫æT B·ªä:")
    for tb in ds_tb:
        print(f"‚Üí {tb['ma']} - {tb['ten']} (Nh√≥m: {tb['manhom']})")


# ------------------------------
# L·ªåC THI·∫æT B·ªä THEO NH√ìM
# ------------------------------
def loc_theo_nhom(ds_tb, manhom):
    return [tb for tb in ds_tb if tb['manhom'] == manhom]


# ------------------------------
# T√åM NH√ìM C√ì NHI·ªÄU THI·∫æT B·ªä NH·∫§T
# ------------------------------
def nhom_nhieu_thiet_bi_nhat(ds_nhom, ds_tb):
    thong_ke = {}
    for tb in ds_tb:
        manhom = tb['manhom']
        thong_ke[manhom] = thong_ke.get(manhom, 0) + 1

    # T√¨m nh√≥m c√≥ s·ªë l∆∞·ª£ng thi·∫øt b·ªã cao nh·∫•t
    nhom_max = max(thong_ke, key=thong_ke.get)
    so_luong = thong_ke[nhom_max]

    # L·∫•y t√™n nh√≥m
    ten_nhom = next((n['ten'] for n in ds_nhom if n['ma'] == nhom_max), "Kh√¥ng r√µ")

    print(f"\nüèÜ Nh√≥m c√≥ nhi·ªÅu thi·∫øt b·ªã nh·∫•t: {ten_nhom} ({nhom_max}) v·ªõi {so_luong} thi·∫øt b·ªã.")


# ------------------------------
# CH∆Ø∆†NG TR√åNH CH√çNH
# ------------------------------
def main():
    ds_nhom = doc_nhom_thiet_bi("nhomthietbi.xml")
    ds_tb = doc_thiet_bi("ThietBi.xml")

    hien_thi_ds_nhom(ds_nhom)
    hien_thi_ds_thiet_bi(ds_tb)

    # L·ªçc theo nh√≥m
    manhom = input("\nNh·∫≠p m√£ nh√≥m c·∫ßn xem thi·∫øt b·ªã (vd: n1, n2, n3): ")
    ds_loc = loc_theo_nhom(ds_tb, manhom)
    if ds_loc:
        print(f"\nüìã C√°c thi·∫øt b·ªã thu·ªôc nh√≥m {manhom}:")
        for tb in ds_loc:
            print(f"‚Üí {tb['ma']} - {tb['ten']}")
    else:
        print("‚ùå Kh√¥ng t√¨m th·∫•y thi·∫øt b·ªã n√†o cho nh√≥m n√†y.")

    # Nh√≥m c√≥ nhi·ªÅu thi·∫øt b·ªã nh·∫•t
    nhom_nhieu_thiet_bi_nhat(ds_nhom, ds_tb)


# ------------------------------
if __name__ == "__main__":
    main()
